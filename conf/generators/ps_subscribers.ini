;pssubsbalances.generator.type="Generator_Payments"
;pssubsbalances.generator.export=APPLICATION_PATH "/files/"
;pssubsbalances.generator.export="/billrun_cdr/prepaid/subscribers/"
pssubsbalances.generator.separator=","
pssubsbalances.generator.collection=subscribers
pssubsbalances.generator.include_headers=1
pssubsbalances.generator.limit=100000000
pssubsbalances.generator.file_extension=".dat"

pssubsbalances.generator.match.0.sid='{"$gt":0}'

; ### prepere the matched cdrs to $group aggregation ##
;pssubsbalances.generator.pre_project.current_date='$currentDate'
;pssubsbalances.generator.pre_project.trans_id_1='{"$cond": { "if" : "$reverse_charge" , "then":null ,"else":"$transaction_id"}}'
;pssubsbalances.generator.pre_project.refund_flag='{"$cond": { "if" : "$reverse_charge" , "then":"Y" ,"else":"N"}}'
;pssubsbalances.generator.pre_project.refund_trans_id_1='{"$cond": { "if" : "$reverse_charge" , "then":"$transaction_id" ,"else":null}}'
;pssubsbalances.generator.pre_project.np_code='{"$cond" : {  "if" : { "$isArray" : [ "$np_code" ] }  , "then" : "" , "else" : "$np_code"}}'
pssubsbalances.generator.pre_project.imsi='{ "$ifNull" : [ "$imsi", "" ] }'


; ### If needed actions todo before the unwind/aggregation ###
pssubsbalances.generator.pre_pipeline='[
											{"$sort":{"sid":1}},
											{"$unwind":"$imsi"}											
                                        ]'

;										{"$lookup":{"from":"balances",
;															"localField":"sid",
;															"foreignField":"sid",
;															"as":"balances"}}
;											,{"$match":{"balances":{"$ne":[]}}}


; ### This  is the keys  that  the _id  will be grouped by  exmp : _id :  {SubscriberId:"$sid", connected_number:"$connected_number"} ###
pssubsbalances.generator.grouping.sid='"$sid"'
pssubsbalances.generator.grouping.aid='"$aid"'


; ### This will each record will be mapped to the  aggregated line ###
pssubsbalances.generator.mapping.to_date='{"$first":"$to"}'
pssubsbalances.generator.mapping.ban='{"$first":"$aid"}'
pssubsbalances.generator.mapping.subscriber_no='{"$first":"$sid"}'
pssubsbalances.generator.mapping.creation_date='{"$first":"$from"}'
pssubsbalances.generator.mapping.creation_time='{"$first":"$from"}'
pssubsbalances.generator.mapping.update_date='{"$first":"$last_update"}'
pssubsbalances.generator.mapping.update_time='{"$first":"$last_update"}'
pssubsbalances.generator.mapping.no_of_balances='{"$first":"$sid"}'
pssubsbalances.generator.mapping.sp_id='{"$first":"$service_provider"}'
pssubsbalances.generator.mapping.cos_id='{"$first":"$plan"}'
pssubsbalances.generator.mapping.imsi='{"$first":"$imsi"}'
pssubsbalances.generator.mapping.last_trans_date='{"$first":"$sid"}' 
pssubsbalances.generator.mapping.lang_id='{"$first":"$language"}'
pssubsbalances.generator.mapping.last_recharge_date='{"$first":"$sid"}'

; ### Add helper fields to the  aggregated line ### 
;pssubsbalances.generator.helpers.stamps='{"$push":"$stamp"}'

;### Actions to do after the  aggregate ###
;pssubsbalances.generator.post_pipeline="[]"

;  ### Define translation to the fields  by RegExes or  by functions ###
pssubsbalances.generator.translations.lang_id.type=function
pssubsbalances.generator.translations.lang_id.translation.function="cdrQueryTranslations"
pssubsbalances.generator.translations.lang_id.translation.values.1.0.lang_id="/^Hebrew/"
pssubsbalances.generator.translations.sp_id.type=function
pssubsbalances.generator.translations.sp_id.translation.function="getServiceProviderValues"
pssubsbalances.generator.translations.sp_id.translation.values[key]="sp_id"
pssubsbalances.generator.translations.sp_id.translation.values[field]="id"
;pssubsbalances.generator.translations.sp_id.type=function
;pssubsbalances.generator.translations.sp_id.translation.function="cdrQueryTranslations"
;pssubsbalances.generator.translations.sp_id.translation.values.1.0.service_provider="/^Pelephone/"
pssubsbalances.generator.translations.no_of_balances.type=function
pssubsbalances.generator.translations.no_of_balances.translation.function="countBalances"
pssubsbalances.generator.translations.creation_date.type=function
pssubsbalances.generator.translations.creation_date.translation.function="translateUrt"
pssubsbalances.generator.translations.creation_date.translation.values="d-m-y"
pssubsbalances.generator.translations.creation_time.type=function
pssubsbalances.generator.translations.creation_time.translation.function="translateUrt"
pssubsbalances.generator.translations.creation_time.translation.values="H:i:s"
pssubsbalances.generator.translations.last_trans_date.type=function
pssubsbalances.generator.translations.last_trans_date.translation.function="lastSidTransactionDate"
pssubsbalances.generator.translations.last_trans_date.translation.values[field]='transaction'
pssubsbalances.generator.translations.last_trans_date.translation.values[date_format]="d-m-y"
pssubsbalances.generator.translations.last_recharge_date.type=function
pssubsbalances.generator.translations.last_recharge_date.translation.function="lastSidTransactionDate"
pssubsbalances.generator.translations.last_recharge_date.translation.values[field]='recharge'
pssubsbalances.generator.translations.last_recharge_date.translation.values[date_format]="d-m-y"
pssubsbalances.generator.translations.cos_id.type=function
pssubsbalances.generator.translations.cos_id.translation.function="getPlanId"
pssubsbalances.generator.translations.cos_id.translation.values[query]=''

; ###  specify how  each field should  be writen to the file (based on sprintf formating) ###
pssubsbalances.generator.field_definitions.ban="%s"
pssubsbalances.generator.field_definitions.creation_date="%s"
pssubsbalances.generator.field_definitions.subscriber_no="0%s"
pssubsbalances.generator.field_definitions.creation_time="%s"
pssubsbalances.generator.field_definitions.no_of_balances="%d"
pssubsbalances.generator.field_definitions.sp_id="%d"
pssubsbalances.generator.field_definitions.cos_id="%s"
pssubsbalances.generator.field_definitions.imsi="%s"
pssubsbalances.generator.field_definitions.last_trans_date="%s"
pssubsbalances.generator.field_definitions.lang_id="%d"
pssubsbalances.generator.field_definitions.last_recharge_date="%s"

pssubsbalances.generator.subscribers_limit=30000
pssubsbalances.generator.buffer=16000
