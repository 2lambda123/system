use billing;
db.createCollection('log');
db.createCollection('lines');
db.createCollection('billrun');
db.createCollection('events');
db.createCollection('accounts');

// Add indecies to insure that theres no duplicate lines.
db.lines.ensureIndex({'stamp': 1 }, { unique: true });
db.log.ensureIndex({'stamp': 1 },  { unique: true , sparse: true});

// Add indecies to  increase access speeds to lines collection.
db.lines.ensureIndex({'billrun': 1 }, { unique: false, sparse: true, background: true});
db.lines.ensureIndex({'subscriber_id': 1 }, { unique: false, sparse: true, background: true });

//08/Jan/2013
//db.billrun.ensureIndex({'account_id': 1 }, { unique: false, sparse: true, background: true}); // there's already a compound index account_id + billrun_key
db.billrun.ensureIndex({'stamp': 1 }, { unique: false, sparse: true, background: true});

//23/Jan/2013
db.lines.ensureIndex({'type': 1 }, { unique: false , sparse: true, background: true });
db.lines.ensureIndex({'source': 1 }, { unique: false , sparse: true, background: true });

//29/Jan/2013
db.log.ensureIndex({'type': 1 }, { unique: false , sparse: true, background: true });
db.log.ensureIndex({'source': 1 }, { unique: false , sparse: true, background: true });

//13/Feb/2013 to speed up alert aggregate
db.lines.ensureIndex({'deposit_stamp': 1 }, { unique: false , sparse: true, background: true });
db.lines.ensureIndex({'event_stamp': 1 }, { unique: false , sparse: true, background: true });

//19/Mar/2013 create collection for rates
db.createCollection('rates');

//20/Apr/2013 fatster reports queries 
db.lines.ensureIndex({'record_type': 1 }, { unique: false , sparse: true, background: true });
db.lines.ensureIndex({'unified_record_time': 1 }, { unique: false , sparse: true, background: true })

//22/Apr/2013 create index for imsi
db.lines.ensureIndex({'imsi': 1 }, { unique: false, sparse: true, background: true});

//29/Mar/2013 create rates indexes
db.rates.ensureIndex({'from': 1, 'to': 1, 'params': 1}, { unique: false, sparse: true, background: true });
//db.rates.ensureIndex({'from': 1, 'to': 1, 'params': 1 , 'rates':1}, { unique: false, sparse: true, background: true });
db.rates.ensureIndex({'from': 1, 'to': 1, 'params': 1 , 'key':1}, { unique: true, sparse: true, background: true });
db.rates.ensureIndex({'from': 1 }, { unique: false , sparse: true, background: true });
db.rates.ensureIndex({'to': 1 }, { unique: false , sparse: true, background: true });
db.rates.ensureIndex({'key': 1 }, { unique: false , sparse: true, background: true });

//19/Jun/2013
db.billrun.ensureIndex({'invoice_id': 1 }, { unique: true , sparse: true, background: true });

//09/Jul/2013
db.createCollection('balances');
db.balances.ensureIndex( { billrun_month: 1, subscriber_id: 1 },{ unique: true , background: true });
//21/Jul/2013
db.carriers.ensureIndex({'key': 1}, { unique: true , sparse: true, background: true });
db.carriers.ensureIndex({'identifiction.group_name': 1}, { unique: false , sparse: true, background: true });
db.carriers.ensureIndex({'identifiction.sms_centre': 1}, { unique: false , sparse: true, background: true });

//25/Jul/2013
db.carriers.ensureIndex({record_type:1,out_circuit_group_name: 1}, { unique: false , sparse: true, background: true });
db.carriers.ensureIndex({record_type:1,in_circuit_group_name: 1}, { unique: false , sparse: true, background: true });
//30/Jul/2013
db.billrun.ensureIndex( { billrun_key: 1, account_id: 1 },{ unique: true , background: true });

//04/Aug/2013
db.createCollection('queue');
db.queue.ensureIndex({'stamp': 1 }, { unique: true });

//05/Aug/2013
db.queue.ensureIndex({'calculator_rate': 1 }, { unique: false , sparse: true, background: true});
db.queue.ensureIndex({'calculator_customer': 1 }, { unique: false , sparse: true, background: true});
db.queue.ensureIndex({'calculator_pricing': 1 }, { unique: false , sparse: true, background: true});
db.queue.ensureIndex({'type': 1 }, { unique: false , sparse: true, background: true});
db.queue.ensureIndex({'account_id': 1 }, { unique: false , sparse: true, background: true});

//20/Aug/2013
db.lines.ensureIndex({'file': 1 }, { unique: false, sparse: true, background: true});

//25/Aug/2013
db.createCollection('counters');
db.counters.ensureIndex({coll: 1, seq: 1}, { unique: true, sparse: false, background: true});
db.counters.ensureIndex({coll: 1, oid: 1}, { unique: true, sparse: false, background: true});